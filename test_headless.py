#!/usr/bin/env python3
"""
Script de prueba r√°pida para verificar el modo headless con configuraciones anti-detecci√≥n
"""

import time
import logging
from scraper import CiesScraper
from config import *

# Configurar logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('test_headless.log'),
        logging.StreamHandler()
    ]
)

def test_headless_mode():
    """Probar el modo headless con configuraciones anti-detecci√≥n"""
    scraper = CiesScraper()
    
    try:
        logging.info("üß™ Iniciando prueba de modo headless...")
        logging.info(f"Configuraci√≥n HEADLESS: {HEADLESS}")
        
        # Configurar driver
        if not scraper.setup_driver():
            logging.error("‚ùå Error al configurar driver")
            return False
        
        logging.info("‚úÖ Driver configurado en modo headless")
        
        # Navegar al sitio
        if not scraper.navigate_to_site():
            logging.error("‚ùå Error al navegar al sitio")
            return False
        
        logging.info("‚úÖ Navegaci√≥n exitosa en modo headless")
        
        # Verificar que no estamos en p√°gina de error
        if scraper.is_error_page():
            logging.error("‚ùå Detectada p√°gina de error")
            return False
        
        # Probar clic en Visitantes
        if scraper.click_visitantes_cies():
            logging.info("‚úÖ Clic exitoso en modo headless")
            
            # Verificar que no estamos en p√°gina de error
            if not scraper.is_error_page():
                logging.info("‚úÖ No se detect√≥ p√°gina de error despu√©s del clic")
                return True
            else:
                logging.warning("‚ö†Ô∏è P√°gina de error detectada despu√©s del clic")
                return False
        else:
            logging.error("‚ùå Error en clic")
            return False
        
    except Exception as e:
        logging.error(f"Error en la prueba: {e}")
        return False
    finally:
        if scraper.driver:
            scraper.driver.quit()
            logging.info("WebDriver cerrado")

if __name__ == "__main__":
    logging.info("üöÄ Iniciando prueba de modo headless...")
    
    result = test_headless_mode()
    
    if result:
        logging.info("üéâ Prueba de modo headless exitosa")
    else:
        logging.error("‚ùå Prueba de modo headless fall√≥") 